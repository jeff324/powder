% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_wrapper.R
\name{powder}
\alias{powder}
\title{Power posterior sampling using differential evolution}
\usage{
powder(model, data, num.temps = NULL, alpha = 0.3,
  high.temps.first = FALSE, n.sequences = 1, current.sequence = 1,
  n.samples = 1000, n.chains = NULL, burnin = 500, meltin = 250,
  de_params = list(), method = "standard", return.samples = TRUE,
  verbose = TRUE, update = 100)
}
\arguments{
\item{model}{See \code{\link{LBA}} for more information and an example.}

\item{data}{A list of data where each element is the data for a specific subject}

\item{num.temps}{Number of temperatures (i.e. number of power posteriors to sample from)}

\item{alpha}{controls the temperature schedule. 0.3 is recommended.}

\item{high.temps.first}{If true, then the posterior will be sampled from first, followed by lower temperature posteriors.
If false, then the prior will be sampled from first, followed by higher temperature posteriors.}

\item{n.sequences}{This is useful for running parallel power posteriors. If \code{n.sequences = 1}, then all power posteriors
will be run sequentially. If \code{n.sequences > 1} then \code{num.temps / n.sequences}
power posteriors will be run sequentially.}

\item{current.sequence}{If n.sequences > 1, then \code{num.temps / n.sequences} power posteriors will be run sequentially.
\code{current.sequence} is the index of the current sequence. For example, if \code{num.temps = 10}, \code{n.sequences = 2}, and
\code{current.sequence = 1} then temperatures 1 through 5 will be run.
If \code{current.sequence = 2} then temperatures 6 through 10 will be run.}

\item{n.samples}{The number of samples to draw from each power posterior}

\item{n.chains}{The number of chains to use. By default, \code{n.chains} is the number of subject-level parameters times 3.}

\item{burnin}{The number of samples to discard when computing the marginal likelihood.
These samples are included in the raw output.}

\item{meltin}{The power posteriors are sampled sequentially. When moving to the next power posterior, the sampling process
takes some time to adapt to the new power posterior. \code{meltin} is the number of samples to discard after moving to the next
power posterior. While \code{burnin} discards samples from the first power posterior, \code{meltin} discard samples for all
other power posteriors.}

\item{de_params}{A list containing the following options for DE-MCMC. See Turner et al. (2013) for details.
\itemize{
\item \code{b} The parameter for the uniformly distributed noise term for the DE proposal. Default is .001.
\item \code{migration} Circulates the states of the chains to remedy problem of outlier chains.
\item \code{migration.freq} Number of iterations to wait between each migration step
\item \code{migration.start} When to start migrating. This should be after chains are burned in.
\item \code{migration.end} When to stop migrating. Migration should stop well before sampling is finished.
}}

\item{method}{A character vector that specifies the type of sampling to be performed and accepts one of the following:
\itemize{
\item \code{standard} This options samples from each power posterior along the temperature schedule in sequence
\item \code{parallel} This options samples from each power posterior in parallel, where the target density of each chain is
a power posterior at a given temperature. Using this method will cause n.chains to default to num.temps.
\item \code{sample.posterior} This options samples from the posterior (i.e. the power posterior where temperature = 1).
Although this option is useful for parameter estimation, it is not possible to obtain marginal likelihoods via this option.
}}

\item{return.samples}{If true, return subject and group-level samples.
Otherwise, return only the log likelihoods from each power posterior.}

\item{verbose}{Display progress}

\item{update}{Number of iterations between progress display updates}
}
\value{
A list with the following elements.

\code{log.like.list} A list containing the log likelihoods for each temperature

\code{theta} An array containing the subject-level samples

\code{phi} An array containing the group-level samples

Note, if \code{return.samples = FALSE} then only \code{log.like.list} will be returned.
}
\description{
\code{powder} Runs power posterior sampling using differential evolution markov chain monte carlo
}
\examples{
\dontrun{
model = LBA.Individual$new(b=T)
data('individual',package='powder')
pow.out = powder(data=individual, model=model, num.temps=30)
est = marginal.likelihood(pow.out)
print(est)
}
}
